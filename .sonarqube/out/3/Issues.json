{
  "$schema": "http://json.schemastore.org/sarif-1.0.0",
  "version": "1.0.0",
  "runs": [
    {
      "tool": {
        "name": "Compilateur Microsoft (R) Visual C#",
        "version": "4.0.0.0",
        "fileVersion": "4.0.1-1.22181.2 (487283bc)",
        "semanticVersion": "4.0.0",
        "language": "fr-FR"
      },
      "results": [
        {
          "ruleId": "CS8600",
          "level": "warning",
          "message": "Conversion de littéral ayant une valeur null ou d'une éventuelle valeur null en type non-nullable.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/firas/Musique/05_04_2024%20backend/Trip_Backend/Trip.Tests/Controllers/ClientControllerTests.cs",
                "region": {
                  "startLine": 36,
                  "startColumn": 70,
                  "endLine": 36,
                  "endColumn": 98
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8625",
          "level": "warning",
          "message": "Impossible de convertir un littéral ayant une valeur null en type référence non-nullable.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/firas/Musique/05_04_2024%20backend/Trip_Backend/Trip.Tests/Controllers/ClientControllerTests.cs",
                "region": {
                  "startLine": 36,
                  "startColumn": 70,
                  "endLine": 36,
                  "endColumn": 98
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8600",
          "level": "warning",
          "message": "Conversion de littéral ayant une valeur null ou d'une éventuelle valeur null en type non-nullable.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/firas/Musique/05_04_2024%20backend/Trip_Backend/Trip.Tests/Controllers/HotelsControllerTests.cs",
                "region": {
                  "startLine": 73,
                  "startColumn": 40,
                  "endLine": 73,
                  "endColumn": 44
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8604",
          "level": "warning",
          "message": "Existence possible d'un argument de référence null pour le paramètre 'value' dans 'IReturnsResult<IHotelService> IReturns<IHotelService, IEnumerable<HotelDTO>>.Returns(IEnumerable<HotelDTO> value)'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/firas/Musique/05_04_2024%20backend/Trip_Backend/Trip.Tests/Controllers/HotelsControllerTests.cs",
                "region": {
                  "startLine": 75,
                  "startColumn": 59,
                  "endLine": 75,
                  "endColumn": 69
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8600",
          "level": "warning",
          "message": "Conversion de littéral ayant une valeur null ou d'une éventuelle valeur null en type non-nullable.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/firas/Musique/05_04_2024%20backend/Trip_Backend/Trip.Tests/Controllers/FlightsControllerTests.cs",
                "region": {
                  "startLine": 63,
                  "startColumn": 70,
                  "endLine": 63,
                  "endColumn": 98
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8625",
          "level": "warning",
          "message": "Impossible de convertir un littéral ayant une valeur null en type référence non-nullable.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/firas/Musique/05_04_2024%20backend/Trip_Backend/Trip.Tests/Controllers/FlightsControllerTests.cs",
                "region": {
                  "startLine": 63,
                  "startColumn": 70,
                  "endLine": 63,
                  "endColumn": 98
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8602",
          "level": "warning",
          "message": "Déréférencement d'une éventuelle référence null.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/firas/Musique/05_04_2024%20backend/Trip_Backend/Trip.Tests/Controllers/UserControllerTest.cs",
                "region": {
                  "startLine": 102,
                  "startColumn": 35,
                  "endLine": 102,
                  "endColumn": 44
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS1998",
          "level": "warning",
          "message": "Cette méthode async n'a pas d'opérateur 'await' et elle s'exécutera de façon synchrone. Utilisez l'opérateur 'await' pour attendre les appels d'API non bloquants ou 'await Task.Run(…)' pour effectuer un travail utilisant le processeur sur un thread d'arrière-plan.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/firas/Musique/05_04_2024%20backend/Trip_Backend/Trip.Tests/Controllers/UserControllerTest.cs",
                "region": {
                  "startLine": 70,
                  "startColumn": 27,
                  "endLine": 70,
                  "endColumn": 64
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8605",
          "level": "warning",
          "message": "Conversion unboxing d'une valeur peut-être null.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/firas/Musique/05_04_2024%20backend/Trip_Backend/Trip.Tests/Controllers/UserControllerTest.cs",
                "region": {
                  "startLine": 128,
                  "startColumn": 25,
                  "endLine": 128,
                  "endColumn": 45
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS1998",
          "level": "warning",
          "message": "Cette méthode async n'a pas d'opérateur 'await' et elle s'exécutera de façon synchrone. Utilisez l'opérateur 'await' pour attendre les appels d'API non bloquants ou 'await Task.Run(…)' pour effectuer un travail utilisant le processeur sur un thread d'arrière-plan.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/firas/Musique/05_04_2024%20backend/Trip_Backend/Trip.Tests/Controllers/UserControllerTest.cs",
                "region": {
                  "startLine": 108,
                  "startColumn": 27,
                  "endLine": 108,
                  "endColumn": 77
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS1998",
          "level": "warning",
          "message": "Cette méthode async n'a pas d'opérateur 'await' et elle s'exécutera de façon synchrone. Utilisez l'opérateur 'await' pour attendre les appels d'API non bloquants ou 'await Task.Run(…)' pour effectuer un travail utilisant le processeur sur un thread d'arrière-plan.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/firas/Musique/05_04_2024%20backend/Trip_Backend/Trip.Tests/Controllers/UserControllerTest.cs",
                "region": {
                  "startLine": 134,
                  "startColumn": 27,
                  "endLine": 134,
                  "endColumn": 74
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1816",
          "level": "note",
          "message": "Change DossierControllerTests.Dispose() to call GC.SuppressFinalize(object). This will prevent derived types that introduce a finalizer from needing to re-implement 'IDisposable' to call it.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/firas/Musique/05_04_2024%20backend/Trip_Backend/Trip.Tests/Controllers/DossierControllerTests.cs",
                "region": {
                  "startLine": 36,
                  "startColumn": 21,
                  "endLine": 36,
                  "endColumn": 28
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1829",
          "level": "note",
          "message": "Use the \"Count\" property instead of Enumerable.Count()",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/firas/Musique/05_04_2024%20backend/Trip_Backend/Trip.Tests/Repositories/DossierRepositoryTest.cs",
                "region": {
                  "startLine": 64,
                  "startColumn": 44,
                  "endLine": 64,
                  "endColumn": 58
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "PropertyNameKey": "Count"
            }
          }
        }
      ],
      "rules": {
        "CA1816": {
          "id": "CA1816",
          "shortDescription": "Dispose methods should call SuppressFinalize",
          "fullDescription": "A method that is an implementation of Dispose does not call GC.SuppressFinalize; or a method that is not an implementation of Dispose calls GC.SuppressFinalize; or a method calls GC.SuppressFinalize and passes something other than this (Me in Visual Basic).",
          "defaultLevel": "note",
          "helpUri": "https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1816",
          "properties": {
            "category": "Usage",
            "isEnabledByDefault": true,
            "tags": [
              "PortedFromFxCop",
              "Telemetry",
              "EnabledRuleInAggressiveMode"
            ]
          }
        },
        "CA1829": {
          "id": "CA1829",
          "shortDescription": "Use Length/Count property instead of Count() when available",
          "fullDescription": "Enumerable.Count() potentially enumerates the sequence while a Length/Count property is a direct access.",
          "defaultLevel": "note",
          "helpUri": "https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1829",
          "properties": {
            "category": "Performance",
            "isEnabledByDefault": true,
            "tags": [
              "Telemetry",
              "EnabledRuleInAggressiveMode"
            ]
          }
        },
        "CS1998": {
          "id": "CS1998",
          "shortDescription": "Cette méthode async n'a pas d'opérateur 'await' et elle s'exécutera de façon synchrone",
          "defaultLevel": "warning",
          "helpUri": "https://msdn.microsoft.com/query/roslyn.query?appId=roslyn&k=k(CS1998)",
          "properties": {
            "category": "Compiler",
            "isEnabledByDefault": true,
            "tags": [
              "Compiler",
              "Telemetry"
            ]
          }
        },
        "CS8600": {
          "id": "CS8600",
          "shortDescription": "Conversion de littéral ayant une valeur null ou d'une éventuelle valeur null en type non-nullable.",
          "defaultLevel": "warning",
          "helpUri": "https://msdn.microsoft.com/query/roslyn.query?appId=roslyn&k=k(CS8600)",
          "properties": {
            "category": "Compiler",
            "isEnabledByDefault": true,
            "tags": [
              "Compiler",
              "Telemetry"
            ]
          }
        },
        "CS8602": {
          "id": "CS8602",
          "shortDescription": "Déréférencement d'une éventuelle référence null.",
          "defaultLevel": "warning",
          "helpUri": "https://msdn.microsoft.com/query/roslyn.query?appId=roslyn&k=k(CS8602)",
          "properties": {
            "category": "Compiler",
            "isEnabledByDefault": true,
            "tags": [
              "Compiler",
              "Telemetry"
            ]
          }
        },
        "CS8604": {
          "id": "CS8604",
          "shortDescription": "Existence possible d'un argument de référence null.",
          "defaultLevel": "warning",
          "helpUri": "https://msdn.microsoft.com/query/roslyn.query?appId=roslyn&k=k(CS8604)",
          "properties": {
            "category": "Compiler",
            "isEnabledByDefault": true,
            "tags": [
              "Compiler",
              "Telemetry"
            ]
          }
        },
        "CS8605": {
          "id": "CS8605",
          "shortDescription": "Conversion unboxing d'une valeur peut-être null.",
          "defaultLevel": "warning",
          "helpUri": "https://msdn.microsoft.com/query/roslyn.query?appId=roslyn&k=k(CS8605)",
          "properties": {
            "category": "Compiler",
            "isEnabledByDefault": true,
            "tags": [
              "Compiler",
              "Telemetry"
            ]
          }
        },
        "CS8625": {
          "id": "CS8625",
          "shortDescription": "Impossible de convertir un littéral ayant une valeur null en type référence non-nullable.",
          "defaultLevel": "warning",
          "helpUri": "https://msdn.microsoft.com/query/roslyn.query?appId=roslyn&k=k(CS8625)",
          "properties": {
            "category": "Compiler",
            "isEnabledByDefault": true,
            "tags": [
              "Compiler",
              "Telemetry"
            ]
          }
        }
      }
    }
  ]
}